/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javafxapplicationsmartroom;

import java.awt.Color;
import java.io.*;
import java.net.*;
import java.util.*;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author ASUS
 */
public class WebUpdate extends javax.swing.JFrame {

    /**
     * Creates new form WebUpdate
     */
    String Light1 = "null";
    String Light2 = "null";
    String Light3 = "null";
    public WebUpdate() {
        initComponents();
        
         jLabel1.setText("Waiting for Web Server Connection...");
         jLabel1.setForeground(Color.RED);
         jLabel1.setOpaque(true);
        
         jLabel2.setText("");
         jLabel3.setText("");
        
         Runnable helloRunnable = new Runnable() {
        public void run() {
                       getData();
        }
             };

        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);
        executor.scheduleAtFixedRate(helloRunnable, 0, 2, TimeUnit.SECONDS);
    }
    
    
        public void getData(){
      while(true)
      {
        try
        {
        URL ur1 = new URL("file:///C:/WebApplication/web/user1_Light1.txt");
        URL ur2 = new URL("file:///C:/WebApplication/web/user1_Light2.txt");
        URL ur3 = new URL("file:///C:/WebApplication/web/user1_Light3.txt");
        URLConnection yc1 = ur1.openConnection();
        yc1.setDoOutput(true);
        URLConnection yc2 = ur2.openConnection();
        yc2.setDoOutput(true);
        URLConnection yc3 = ur3.openConnection();
        yc3.setDoOutput(true);
        BufferedReader in1 = new BufferedReader( new InputStreamReader(yc1.getInputStream()));
        BufferedReader in2 = new BufferedReader( new InputStreamReader(yc2.getInputStream()));
        BufferedReader in3 = new BufferedReader( new InputStreamReader(yc3.getInputStream()));
        
        String L1;
        String L2;
        String L3;
   
        L1 = in1.readLine();
        in1.close();
        L2 = in2.readLine();
        in2.close();
        L3 = in3.readLine();
        in3.close();
        
        if(L1==null)
           L1="null";
        if(L2==null)
           L2="null";
        if(L3==null)
           L3="null";
        
        setData(L1,L2,L3);
        
             
        
        }
        catch (Exception ex) {
               jLabel1.setText("Waiting for Web Server Connection...");
               jLabel1.setForeground(Color.RED);
               jLabel1.setOpaque(true);
               
                jLabel2.setText("");
                jLabel3.setText(""); 
           System.out.print(ex);
        }
      }
    }
        
     public void setData(String L1, String L2, String L3)
     {
      /* System.out.println("Ok");
       System.out.println(L1);
       System.out.println(Light1);
       System.out.println(L2);
       System.out.println(Light2);
       System.out.println(L3);
       System.out.println(Light3);
      */
       if(!L1.equals(Light1))
       {
           Light1=L1;
           System.out.println(L1);
       }
       if(!L2.equals(Light2))
       {
           Light2=L2;
           System.out.println(L2);
       }
       if(!L3.equals(Light3))
       {
           Light3=L3;
           System.out.println(L3);
       }
       
       
             jLabel1.setText("Connected to Web Server! Receiving Data....");
             jLabel1.setForeground(Color.BLUE);
             jLabel1.setOpaque(true); 
                
                jLabel2.setText("Received Data: ");
                jLabel3.setText(L1+"  "+L2+"  "+L3);
                jLabel3.setForeground(Color.RED);
                jLabel3.setOpaque(true);

       
       
       
     }
     public String getLight1()
     {
         return Light1;
     }
     public String getLight2()
     {
         return Light2;
     }
     public String getLight3()
     {
         return Light3;
     }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setLocation(new java.awt.Point(700, 45));
        setPreferredSize(new java.awt.Dimension(420, 120));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("jLabel2");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addComponent(jLabel1))
                .addContainerGap(258, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WebUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WebUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WebUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WebUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WebUpdate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
